{"version":3,"sources":["../lib/Logger.js"],"names":["Logger","prefix","_prefix","forEach","level","args","_log","newArgs","_appendPrefix","log"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;IAEqBA,M;AACnB,kBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,SAAKC,OAAL,GAAeD,MAAf;;AAEA,KAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,EAA6B,MAA7B,EAAqC,OAArC,EAA8CE,OAA9C,CAAsD,UAACC,KAAD,EAAW;AAC/D,YAAKA,KAAL,IAAc;AAAA,0CAAIC,IAAJ;AAAIA,cAAJ;AAAA;;AAAA,eAAa,MAAKC,IAAL,CAAUF,KAAV,EAAiBC,IAAjB,CAAb;AAAA,OAAd;AACD,KAFD;AAGD;;;;yBAEID,K,EAAOC,I,EAAM;AAAA;;AAChB,UAAME,UAAU,KAAKC,aAAL,CAAmBH,IAAnB,CAAhB;AACA,2BAAQI,GAAR,kDAAeF,OAAf;AACD;;;kCAEaF,I,EAAM;AAClB,aAAO,KAAKH,OAAL,IAAmB,KAAKA,OAAxB,gDAAuCG,IAAvC,gDAAmDA,IAAnD,EAAP;AACD;;;;;kBAhBkBL,M","file":"Logger.js","sourcesContent":["/* eslint-disable no-console */\n\nexport default class Logger {\n  constructor(prefix) {\n    this._prefix = prefix;\n\n    ['debug', 'verbose', 'info', 'warn', 'error'].forEach((level) => {\n      this[level] = (...args) => this._log(level, args);\n    });\n  }\n\n  _log(level, args) {\n    const newArgs = this._appendPrefix(args);\n    console.log(...newArgs);\n  }\n\n  _appendPrefix(args) {\n    return this._prefix ? [`${this._prefix}:`, ...args] : [...args];\n  }\n}\n"]}