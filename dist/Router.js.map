{"version":3,"sources":["../lib/Router.js"],"names":["logger","Router","_router","mergeParams","path","controller","settings","method","action","url","forEach","setting","debug","name","route","actionName","func","middlewares","call"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,SAAS,qBAAW,UAAX,CAAf;;IAEqBC,M;AACnB,oBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,oBAAkB,EAAEC,aAAa,IAAf,EAAlB,CAAf;AACD;;;;6BAMQC,I,EAAMC,U,EAAY;AAAA;;AACzB,UAAMC,WAAW,CACf,EAAEC,QAAQ,KAAV,EAAiBC,QAAQ,OAAzB,EAAkCC,KAAK,GAAvC,EADe,EAEf,EAAEF,QAAQ,KAAV,EAAiBC,QAAQ,MAAzB,EAAiCC,KAAK,MAAtC,EAFe,EAGf,EAAEF,QAAQ,MAAV,EAAkBC,QAAQ,OAA1B,EAAmCC,KAAK,GAAxC,EAHe,EAIf,EAAEF,QAAQ,QAAV,EAAoBC,QAAQ,QAA5B,EAAsCC,KAAK,GAA3C,EAJe,EAKf,EAAEF,QAAQ,KAAV,EAAiBC,QAAQ,QAAzB,EAAmCC,KAAK,SAAxC,EALe,EAMf,EAAEF,QAAQ,OAAV,EAAmBC,QAAQ,QAA3B,EAAqCC,KAAK,SAA1C,EANe,CAAjB;;AASAH,eAASI,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC5BX,eAAOY,KAAP,CAAa,iBAAb,EAAgCD,QAAQJ,MAAxC,OAAmDH,IAAnD,GAA0DO,QAAQF,GAAlE,EAAyEJ,WAAWQ,IAApF,EAA0FF,QAAQH,MAAlG;AACA,cAAKM,KAAL,CAAWH,QAAQJ,MAAnB,OAA8BH,IAA9B,GAAqCO,QAAQF,GAA7C,EAAoDJ,UAApD,EAAgEM,QAAQH,MAAxE;AACD,OAHD;AAID;;;0BAEKD,M,EAAQH,I,EAAMC,U,EAAYU,U,EAAY;AAC1C,UAAMC,OAAO,KAAKd,OAAL,CAAaK,MAAb,CAAb;;AAD0C,+BAEVF,WAAWG,MAAX,CAAkBO,UAAlB,CAFU;AAAA,UAElCP,MAFkC,sBAElCA,MAFkC;AAAA,UAE1BS,WAF0B,sBAE1BA,WAF0B;;AAG1CD,WAAKE,IAAL,CAAU,KAAKhB,OAAf,EAAwBE,IAAxB,EAA8Ba,eAAe,EAA7C,EAAiDT,MAAjD;AACD;;;wBAxBmB;AAClB,aAAO,KAAKN,OAAZ;AACD;;;;;kBAPkBD,M","file":"Router.js","sourcesContent":["import { Router as ExpressRouter } from 'express';\nimport Logger from './Logger';\n\nconst logger = new Logger('resource');\n\nexport default class Router {\n  constructor() {\n    this._router = new ExpressRouter({ mergeParams: true });\n  }\n\n  get expressRouter() {\n    return this._router;\n  }\n\n  resource(path, controller) {\n    const settings = [\n      { method: 'get', action: 'index', url: '/' },\n      { method: 'get', action: 'show', url: '/:id' },\n      { method: 'post', action: 'store', url: '/' },\n      { method: 'delete', action: 'delete', url: '/' },\n      { method: 'put', action: 'update', url: '/update' },\n      { method: 'patch', action: 'update', url: '/update' },\n    ];\n\n    settings.forEach((setting) => {\n      logger.debug('register route:', setting.method, `${path}${setting.url}`, controller.name, setting.action);\n      this.route(setting.method, `${path}${setting.url}`, controller, setting.action);\n    });\n  }\n\n  route(method, path, controller, actionName) {\n    const func = this._router[method];\n    const { action, middlewares } = controller.action(actionName);\n    func.call(this._router, path, middlewares || [], action);\n  }\n}\n"]}